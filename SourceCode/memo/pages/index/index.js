"use strict";
Page({
    data: {
        isNullData: true,
        memoListData: []
    },
    onPullDownRefresh: function () {
        console.log("监听用户下拉动作");
        this.getMemoListData();
    },
    onShow: function () {
        this.getMemoListData();
    },
    onLoad: function () {
        this.getMemoListData();
    },
    getMemoListData: function () {
        try {
            var memoListData = wx.getStorageSync('memoListData');
            if (memoListData) {
                this.setData({
                    memoListData: memoListData,
                    isNullData: false
                });
            }
            else {
                this.setData({
                    memoListData: [],
                    isNullData: true
                });
            }
        }
        catch (e) {
            wx.showToast({
                title: '获取备忘录数据失败，请稍后再试！',
                icon: 'none',
                duration: 1500
            });
        }
    },
    onClickNew: function () {
        console.log("点击新建");
        try {
            wx.setStorageSync('isEdit', false);
            wx.switchTab({
                url: '/pages/new/new'
            });
        }
        catch (e) { }
    },
    onClickEdit: function (event) {
        console.log("点击编辑");
        try {
            wx.setStorageSync('isEdit', true);
            var id = event.currentTarget.dataset.item.id;
            wx.setStorageSync('id', id);
            wx.switchTab({
                url: '/pages/new/new'
            });
        }
        catch (e) { }
    },
});
//# sourceMappingURL=data:application/json;base64,